# Hey, emacs! This is a -*- shell-script -*-

# Size of loopback files to create, in MB (if loopback files are used)
DISK_SIZE=20000

CONTROL_FILE=/dev/castle-fs/control

function init_kernel_fs {
    if ! kernel_fs_running; then
        echo "Castle FS kernel module not found, trying to insert."
        modprobe castle-fs
        # Wait up to 5 seconds for the control file to appear
        # udev renaming is sometimes slow
        for i in `seq 50`; do
            if [ -e "${CONTROL_FILE}" ]; then
                break
            fi
            # Wait 0.1s
            usleep 100000
        done
        if [ ! -e "${CONTROL_FILE}" ]; then
            echo "Control file has not been created after kernel module insertion"
            exit 1
        fi
    fi
}

function unmount_kernel_fs {
    if kernel_fs_running; then 
        echo "Unmounting Kernel FS..."

        rmmod castle_fs
        
        # Wait up to 5 seconds for the control file to disappear
        for i in `seq 50`; do
            if [ ! -e ${CONTROL_FILE} ]; then
                break
            fi
                # Wait 0.1s
            usleep 100000
        done
        if [ -e ${CONTROL_FILE} ]; then
            echo "Removed castle_fs module, but the control file is still there!"
            exit 1
        fi
    fi
}

function runcli {
    echo -n "   Command: $@ "
    local FAILED=0
    local OUTPUT=$(mktemp /tmp/cli-output.XXXXXXXXXX)

    if ! castle-cli "$@" &> ${OUTPUT}; then
        FAILED=1
    fi

    if [ $FAILED -eq 1 ]; then
        echo
        cat ${OUTPUT}
        exit 1
    fi

    if ! grep -q "Ret val:" "$OUTPUT"; then
        echo
        cat ${OUTPUT}
        exit 1
    fi

    IOCTL_RET=$(grep "Ret val:" "$OUTPUT" | sed -e "s/Ret val: \(0x[0-9a-f]*\)\./\1/g")
    rm ${OUTPUT}
    echo "    ret: $IOCTL_RET"
}

function devid_of_disk {
    local disk="$1"
    major=$(stat -c '%t' "$disk")
    minor=$(stat -c '%T' "$disk")
    devid=$(( (0x$minor & 0xFF) | ( (0x$minor & 0xFFF00) << 12 ) | (0x$major << 8) ))
    printf '0x%x' "$devid"
}
